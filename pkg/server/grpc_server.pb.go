// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: trellis.tech/trellis.v1/proto/grpc_server.proto

package server

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	message "trellis.tech/trellis.v1/pkg/message"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_trellis_tech_trellis_v1_proto_grpc_server_proto protoreflect.FileDescriptor

var file_trellis_tech_trellis_v1_proto_grpc_server_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x74, 0x72, 0x65, 0x6c, 0x6c, 0x69, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x74,
	0x72, 0x65, 0x6c, 0x6c, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x2b, 0x74, 0x72, 0x65, 0x6c, 0x6c,
	0x69, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x74, 0x72, 0x65, 0x6c, 0x6c, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x38, 0x0a, 0x07, 0x54, 0x72, 0x65, 0x6c, 0x6c, 0x69,
	0x73, 0x12, 0x2d, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x2b, 0x5a, 0x29, 0x74, 0x72, 0x65, 0x6c, 0x6c, 0x69, 0x73, 0x2e, 0x74, 0x65, 0x63, 0x68,
	0x2f, 0x74, 0x72, 0x65, 0x6c, 0x6c, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_trellis_tech_trellis_v1_proto_grpc_server_proto_goTypes = []interface{}{
	(*message.Request)(nil),  // 0: message.Request
	(*message.Response)(nil), // 1: message.Response
}
var file_trellis_tech_trellis_v1_proto_grpc_server_proto_depIdxs = []int32{
	0, // 0: server.Trellis.Call:input_type -> message.Request
	1, // 1: server.Trellis.Call:output_type -> message.Response
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_trellis_tech_trellis_v1_proto_grpc_server_proto_init() }
func file_trellis_tech_trellis_v1_proto_grpc_server_proto_init() {
	if File_trellis_tech_trellis_v1_proto_grpc_server_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trellis_tech_trellis_v1_proto_grpc_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trellis_tech_trellis_v1_proto_grpc_server_proto_goTypes,
		DependencyIndexes: file_trellis_tech_trellis_v1_proto_grpc_server_proto_depIdxs,
	}.Build()
	File_trellis_tech_trellis_v1_proto_grpc_server_proto = out.File
	file_trellis_tech_trellis_v1_proto_grpc_server_proto_rawDesc = nil
	file_trellis_tech_trellis_v1_proto_grpc_server_proto_goTypes = nil
	file_trellis_tech_trellis_v1_proto_grpc_server_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TrellisClient is the client API for Trellis service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrellisClient interface {
	// Call allows a single request to be made
	Call(ctx context.Context, in *message.Request, opts ...grpc.CallOption) (*message.Response, error)
}

type trellisClient struct {
	cc grpc.ClientConnInterface
}

func NewTrellisClient(cc grpc.ClientConnInterface) TrellisClient {
	return &trellisClient{cc}
}

func (c *trellisClient) Call(ctx context.Context, in *message.Request, opts ...grpc.CallOption) (*message.Response, error) {
	out := new(message.Response)
	err := c.cc.Invoke(ctx, "/server.Trellis/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrellisServer is the server API for Trellis service.
type TrellisServer interface {
	// Call allows a single request to be made
	Call(context.Context, *message.Request) (*message.Response, error)
}

// UnimplementedTrellisServer can be embedded to have forward compatible implementations.
type UnimplementedTrellisServer struct {
}

func (*UnimplementedTrellisServer) Call(context.Context, *message.Request) (*message.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Call not implemented")
}

func RegisterTrellisServer(s *grpc.Server, srv TrellisServer) {
	s.RegisterService(&_Trellis_serviceDesc, srv)
}

func _Trellis_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(message.Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrellisServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Trellis/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrellisServer).Call(ctx, req.(*message.Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Trellis_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.Trellis",
	HandlerType: (*TrellisServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _Trellis_Call_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "trellis.tech/trellis.v1/proto/grpc_server.proto",
}
